swagger: "2.0"
info:
  version: 1.0.0
  title: Anuvaad Worfklow Manager - API Contract
  description: A python based microservice to trigger and orchestrate the workflow of the anuvaad-etl pipeline. This service will expose REST APIs for workflow related activities on the other hand will also be plugged into the system as a consumer that picks records posted onto the Kafka Queue in order to perform workflow related activities.
  contact:
    name: Kumar Deepak
    email: kumar.deepak@tarento.com

schemes:
  - https
basePath: '/anuvaad-etl-pipeline/wf-manager'




paths: 
  /anu-etl-wf/_initiate:
    post:
      summary: REST API to register and trigger the workflow.
      description: This API accepts either pdf or images and initiates the workflow, which runs through a pipeline. This is an async process.
      parameters:
        - name: request
          in: body
          required: true
          description: Request format accepted by this API.
          schema:
            $ref: '#/definitions/WFInitiateRequest'
            
      tags:
      - Initiate

      responses:
        202:
          description: On successful initiation of the job.
          schema:
            $ref: '#/definitions/WFInitiateResponse'
        400:
          description: On input errors causing a failure in the job.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: On system level errors causing failure in the job.
          schema:
            $ref: '#/definitions/Error'
  

            
  /anu-etl-wf/_interrupt:
    post:
      summary: REST API to interrupt the workflow.
      description: This API interrupts ongoing workflows for a list of jobs or list of tasks.
      parameters:
        - name: request
          in: body
          required: true
          description: Request format accepted by this API.
          schema:
            $ref: '#/definitions/WFInterruptRequest'
            
      tags:
      - Interrupt

      responses:
        200:
          description: On successful interruption of the job.
          schema:
            $ref: '#/definitions/WFInterruptResponse'
        400:
          description: On input errors causing a failure in the job.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: On system level errors causing failure in the job.
          schema:
            $ref: '#/definitions/Error'

        

  /anu-etl-wf/jobs/_search:
    post:
      summary: REST API to search wf job status.
      description: This API provides a facility to search wf jobs based on various criteria.
      parameters:
        - name: request
          in: body
          required: true
          description: Request format accepted by this API.
          schema:
            $ref: '#/definitions/WFJobSearchRequest'
            
      tags:
        - Search
        
      responses:
        200:
          description: Either an empty or a non-empty array of responses.
          schema:
            type: array
            items:
              $ref: '#/definitions/WFInitiateResponse'




definitions:

  File:
    type: object
    properties:
      name:
        type: string
        description: Name of the file. This will be obtained in the output of the file upload API exposed by the anuvaad system. 
      type:
        type: string
        description: type of the file.
        enum:
          - PDF
          - IMAGE
          - TEXT
          - CSV
      locale:
        type: string
        description: The locale of the file. Meaning, in which language is the uploaded file. For instance, 'en' for English, 'hi' for Hindi etc.
        format: varchar
        
        
  FileInput:
    type: object
    properties:
      source:
        type: object
        description: Details of the source file.
        $ref: '#/definitions/File'        
      target:
        type: object
        description: Details of the target file.
        $ref: '#/definitions/File'
        
        
  User:
    type: object
    properties:
      name:
        type: string
        description: Name of the user
      id:
        type: string
        description: Unique ID of the user. It can be the ID used to log into anuvaad's system.
      email:
        type: string
        description: Email ID of the user.
        
        
  WFInitiateRequest:
    type: object
    properties:
      input:
        type: object
        description: Details of the source and target files of which a parallel corp has to be generated
        $ref: '#/definitions/FileInput'        
      userDetails:
        type: object
        description: Details of the user initiating this job.
        $ref: '#/definitions/User'
      workflowCode:
        type: string
        description: Code of the workflow that has to be picked to process this input. These workflows are configured at the application level.
        
  WFInitiateResponse:
    type: object
    properties:
      request:
        type: object
        description: Details of the request sent.
        $ref: '#/definitions/WFInitiateRequest'        
      jobID:
        type: string
        description: A unique job ID generated for this workflow.
      taskID:
        type: string
        description: A unique task ID generated for the current on-going task of the workflow.
      status:
        type: string
        description: Current status of the workflow
        enum:
          - START
          - INPROGRESS
          - FAILED
          - INTERRUPTED
          - COMPLETE
      state:
        type: string
        description: Current state of the workflow
        enum:
          - INGESTED
          - TRANSFORMED
          - PARAGRAPH-EXTRACTED
          - SENTENCE-TOKENISED
          - SENTENCES-ALIGNED
          - PROCESSED
      output:
        type: object
        description: Intermediate or final output of the process. If the status = COMPLETE and the state = PROCESSED, this output is considered to be the final output, intermediate otherwise.
        $ref: '#/definitions/FileInput'
      error:
        type: object
        description: Incase the job fails due to an error in of the child tasks, that error will be capture here for the benefit of the user.
        $ref: '#/definitions/Error'
      startTime:
        type: number
        description: 13 digit epoch of the start time.
      endTime:
        type: number
        description: 13 digit epoch of the end time.
        
        
  WFInterruptRequest:
    type: object
    properties:
      jobIDs:
        type: array
        items:
          type: string
        description: IDs of the jobs to be interrupted.
      taskIDs:
        type: array
        items:
          type: string
        description: IDs of the tasks to be interrupted.

        
  WFInterruptResponse:
    type: array
    items:
      type: object
      properties:
        jobID:
          type: string
          description: ID of the job within which the interrupt occured.
        taskID:
          type: string
          description: ID of the task within which the interrupt occured.
        status:
          type: string
          description: Processing status of the job just interrupt the error.
          enum:
          - INTERRUPTED
        state:
          type: string
          description: Processing state of the job just before the interrupt.
        timeStamp:
          type: number
          description: epoch time at the instant of interrupt.
          
          
  WFJobSearchRequest:
    type: object
    properties:
      jobIDs:
        type: array
        items:
          type: string
        description: Unique IDs of the etl-wf jobs
      taskIDs:
        type: array
        items:
          type: string
        description: Unique IDs of particular tasks within the etl-wf jobs.
      userIDs:
        type: array
        items:
          type: string
        description: Unique IDs of the users who have initiated the etl-wf jobs.
      statuses:
        type: array
        items:
          type: string
          enum:
            - START
            - INPROGRESS
            - FAILED
            - INTERRUPTED
            - COMPLETE
        description: Statuses of the etl-wf jobs.
      states:
        type: array
        items:
          type: string
          enum:
          - INGESTED
          - TRANSFORMED
          - PARAGRAPH-EXTRACTED
          - SENTENCE-TOKENISED
          - SENTENCES-ALIGNED
          - PROCESSED
        description: States of the etl-wf jobs.
      workflowCodes:
        type: array
        items:
          type: string
        description: Workflow Codes of the etl-wf jobs.

        
        
  Error:
    type: object
    properties:
      errorID:
        type: string
        description: Unique ID generated for this error.
      jobID:
        type: string
        description: ID of the job within which the error occured.
      taskID:
        type: string
        description: ID of the task within which the error occured.
      state:
        type: string
        description: Processing state of the job just before the error.
      httpCode:
        type: string
        description: Http Code of the error
      errorMsg:
        type: string
        description: This is the machine generated error message like TypeError, ValueError etc with line number.
      cause:
        type: string
        description: This is the cause of the error in a user understandable format that is defined by the developer.
      timeStamp:
        type: number
        description: epoch time at the instant of error.