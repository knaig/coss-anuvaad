openapi: 3.0.3

info:
  title: Anuvaad File TRANSLATOR

  description: |-
    A python based microservice to trigger and orchestrate the file translator part of anuvaad-extractor.

  contact:
    email: nlp-nmt@tarento.com
  
  license:
    name: MIT License
    url: https://opensource.org/license/mit/
  
  version: XX.XX.XX

externalDocs:
  url: http://anuvaad.org
  description: Find out more of Anuvaad

servers:
  - url: https://users-auth.anuvaad.org/anuvaad-api/file-uploader/
    description: Anuvaad File Translator

tags:
  - name: File translator
    description: (Apis related to initiate the job and download the same)

paths:

  /v0/transform-wf:
    post:
      tags:
        - File translator
      summary: Transform docx to json
      description: This api creates a json file from the docx and also convert the docx to html and pdftohtml.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslatorSchema'
            examples:
              example1:
                $ref: '#/components/examples/TransformWFBodyExample' 
      responses:
        "200":
          description: on successful transformation.
          $ref: '#/components/responses/TransformWFResponse'  ###doubtful
      security:
        - auth-token: []
  
  /v0/download-wf:
    post:
      tags:
        - File translator
      summary: download the translated docx
      description: This api takes the recordid, type and locale to give the output file.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslatorSchema'
            examples:
              example2:
                $ref: '#/components/examples/DownloadWFBodyExample' 
      responses:
        "200":
          description: on successful transformation.
          $ref: '#/components/responses/DownloadWFResponse'
      security:
        - auth-token: []  

components:
 
  schemas:
    TranslatorSchema:

      type: object
      properties:
        input: 
          type: object
          description: object containing file information
          properties:
            files:
              type: array
              items:
                type: object
                properties:
                  locale:
                    type: string
                    description: language code of the given file
                  path:
                    type: string
                    description: name of the file

                  type:
                    type: string
                    description: format of the file
        jobID:
          type: string
          description: identifier of the current job

        stepOrder: 
          type: integer
          description: (sarath)
        
        workflowCode:
          type: string
          description: type of workflow job
        
        tool:
          type: string
          description: process undertaken by the job
        metadata:
          type: object
          description: addtional information related to user
          properties:
            module:
              type: string
              description: contains the module name
            receivedAt:
              type: integer
              description: assigned with random integer values
            sessionID:
              type: string
              description: contains the login id 
            userID:
              type: string
              description: unique identifier of the user
        status:
          type: string
          description: Current status of the job
          enum:
            - STARTED
            - INPROGRESS
            - FAILED
            - INTERRUPTED
            - COMPLETED
          
        state:
          type: string
          description: Current state of the job
          enum:
            - FILE-CONVERTED
            - BLOCKS-MERGED
            - SENTENCE-TOKENISED
            - SENTENCES-ALIGNED
            - TRANSLATED
            - INITIATED
  examples:
    TransformWFBodyExample:
      description: object containing file, user and job data.
      summary: eg1
      value:
        input:
          files:
          - locale: en
            path: Radiation and Human Health.docx
            type: docx
        jobID: abc22
        state: INITIATED
        status: STARTED
        stepOrder: 0
        workflowCode: DP_WFLOW_p
        tool: FILE_TRANSLATOR
        metadata:
          module: WORKFLOW-MANAGER
          receivedAt: 15993163946431696
          sessionID: 4M1qOZj53tIZsCoLNzP0oP
          userID: d4e0b570-b72a-44e5-9110-5fdd54370a9d

    DownloadWFBodyExample:
      description: object containing file which is json, user and job data.
      summary: eg2
      value:
        input:
          files:
          - locale: en
            path: abc22|DOCX1-jegfewuifg22-hgky32r31.json
            type: json
        jobID: abc22
        state: INITIATED
        status: STARTED
        stepOrder: 0
        workflowCode: DP_WFLOW_p
        tool: TOKENISER
        metadata:
          module: WORKFLOW-MANAGER
          receivedAt: 15993163946431696
          sessionID: 4M1qOZj53tIZsCoLNzP0oP
          userID: d4e0b570-b72a-44e5-9110-5fdd54370a9d
    
  responses:
    TransformWFResponse:
      description: On successful transformation
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: string
                description: true or false 
              http:
                type: object
                properties:
                  status:
                    type: string
                    description: status code of the request
              why:
                type: string
                description: response message
              data:
                type: object
                description: data returned by the request
                nullable: true
              count:
                type: integer
                description: count of data items 

    DownloadWFResponse:
      description: output file name is provided.
      content:
        application/json:
          schema:
            type: object
            properties:
                jobID:
                  type: string
                  description: get the jobid of the process
                  example: 'abc22'
                output:
                  type: array
                  description: list of output file path and format
                  items:
                    type: object
                    properties:
                      inputFile:
                        type: string
                        description: recordid or the path from the input 
                        example: abc22|DOCX1-jegfewuifg22-hgky32r31.json
                      outputFile:
                        type: string
                        description: the translated file to be downloaded.
                        example: d2abda60a-174c-46f1-80cc-0ebcx4.docx
                      outputLocale:
                        type: string
                        description: language code of the input
                        example: en
                      outputType:
                        type: string
                        description: the output file format
                        example: docx
                state:
                  type: string
                  description: Current state of the job
                  enum:
                    - FILE-TRANSLATED
                    - BLOCKS-MERGED
                    - SENTENCE-TOKENISED
                    - SENTENCES-ALIGNED
                    - TRANSLATED
                    - INITIATED
                status:
                  type: string
                  description: Current status of the job
                  enum:
                    - SUCCESS
                    - INPROGRESS
                    - FAILED
                    - INTERRUPTED
                    - COMPLETED
                stepOrder:
                  type: integer
                  example: 0
                taskEndTime:
                  type: integer
                  example: 1689928961001
                taskID:
                  type: string
                  example: TOK-163992495854
                taskStarttime:
                  type: integer
                  example: 1689928958545
                tool:
                  type: string
                  example: TOKENISER
                workflowCode:
                  type: string
                  example: DP_WFLOW_p
                
  securitySchemes:
    auth-token:
      type: apiKey
      name: auth-token
      in: header                      