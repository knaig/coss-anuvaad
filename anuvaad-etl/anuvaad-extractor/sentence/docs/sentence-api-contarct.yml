swagger: "2.0"
info:
  version: 1.0.0
  title: Anuvaad Sentence Tokeniser - API Contract
  description: A python based microservice to trigger and orchestrate the sentence tokenisation part of anuvaad-extractor. This service will expose REST APIs for tokenisation activity on the other hand will also be plugged into the system as a consumer that picks records posted onto the Kafka Queue in order to perform tokenisation activity.
  contact:
    name: Kumar Deepak
    email: kumar.deepak@tarento.com

schemes:
  - https
basePath: '/anuvaad-etl/anuvaad-extractor/tokeniser'




paths: 
  /v1/sentence/wflow/tokenise:
    post:
      summary: REST API to extract sentences from paragraph (sentence-tokenisation).
      description: This API accepts list of text files of paragraphs and tokenise sentences from paragraphs. This is an async process.
      parameters:
        - name: request
          in: body
          required: true
          description: Request format accepted by this API.
          schema:
            $ref: '#/definitions/TokenisationRequest'
            
      tags:
      - tokenisation

      responses:
        202:
          description: On successful completion of the job.
          schema:
            $ref: '#/definitions/TokenisationResponse'
        400:
          description: On input errors causing a failure in the job.
          schema:
            $ref: '#/definitions/Error'

  
  /v1/sentence/tokenise:
    post:
      summary: REST API to trigger a tokenisation job.
      description: This API accepts txt file of paragraphs and tokenise sentences from paragraphs.
      parameters:
        - name: request
          in: body
          required: true
          description: Request format accepted by this API.
          schema:
            $ref: '#/definitions/TokenisationRequest/properties/input'
            
      tags:
      - tokenisation

      responses:
        202:
          description: On successful completion of the job.
          schema:
            $ref: '#/definitions/TokenisationResponse/properties/output'
        400:
          description: On input errors causing a failure in the job.
          schema:
            $ref: '#/definitions/Error/properties/error'



definitions:
        
  FileInput:
    type: object
    properties:
      files:
        type: array
        items:
          properties:
            path:
              type: string
              description: This will be obtained in the output of the file upload API exposed by the anuvaad system. 
            type:
              type: string
              description: type of the file.
              enum:
                - txt
            locale:
              type: string
              description: The locale of the file. Meaning, in which language is the uploaded file. For instance, 'en' for English, 'hi' for Hindi etc.
              format: varchar        

        
  FileOutput:
    type: object
    properties:
      files:
        type: array
        items:
          properties:
            inputFile:
              type: string
              description: This will be obtained in the output of the file upload API exposed by the anuvaad system.
            outputFile:
              type: string
              description: This will be generated by 13 digit epoch time. It wil be a txt file.
            type:
              type: string
              description: type of the file.
              enum:
                - txt
            locale:
              type: string
              description: The locale of the file. Meaning, in which language is the uploaded file. For instance, 'en' for English, 'hi' for Hindi etc.
              format: varchar        
        
      
  TokenisationRequest:
    type: object
    properties:
      input:
        description: Details of the input files of which tokenised sentences has to be generated
        $ref: '#/definitions/FileInput'
      jobID:   
        type: string
        description: A unique job ID generated for complete workflow. i.e.received from previous operation.  
      state:
        type: string
        description: current state of workflow received from previous operation.
        enum:
          - INITIATED
      status:
        type: string
        description: current status of workflow received from previous operation.
        enum:
          - STARTED
      workflowCode:
        type: string
        description: Received from previous operation. Code of the workflow that has to be picked to process this input. 
                      These workflows are configured at the application level.
      tool:
        type: string
        description: Current tool name.
        enum:
          - TOKENISER
      stepOrder:
        type: integer
        description: Current steporder of workflow received from previous operation.

        
  TokenisationResponse:
    type: object
    properties:        
      jobID:
        type: string
        description: A unique job ID generated for the complete workflow.
      taskID:
        type: string
        description: A unique task ID generated for the current on-going task of the tokeniser.
      status:
        type: string
        description: Current status of the tokenisation part of workflow.
        enum:
          - SUCCESS
          - FAILED
      state:
        type: string
        description: Current state of the tokenisation part of workflow.
        enum:
          - SENTENCE-TOKENISED
      output:
        type: object
        description: Final output of this process.
        $ref: '#/definitions/FileOutput'
      workflowCode:
        type: string
        description: Received from previous operation. Code of the workflow that has to be picked to process this input. 
                      These workflows are configured at the application level.
      tool:
        type: string
        description: Current tool name.
        enum:
          - TOKENISER
      stepOrder:
        type: integer
        description: Current steporder of workflow received from previous operation.
      startTime:
        type: number
        description: 13 digit epoch of the start time.
      endTime:
        type: number
        description: 13 digit epoch of the end time.

        
        
  Error:
    type: object
    properties:
      jobID:
        type: string
        description: ID of the job within which the error occured.
      taskID:
        type: string
        description: ID of the task within which the error occured.
      state:
        type: string
        description: Processing state of the job just before the error.
      workflowCode:
        type: string
        description: Received from previous operation. Code of the workflow that has to be picked to process this input. 
                      These workflows are configured at the application level.
      error:
        type: object
        properties:
          code:
            type: string
            description: This is the cause of the error.
          message:
            type: string
            description: User understandable message.
      startTime:
        type: number
        description: 13 digit epoch of the start time.
      endTime:
        type: number
        description: 13 digit epoch of the end time.