swagger: "2.0"
info:
  version: 1.0.0
  title: Anuvaad HTML to JSON - API Contract
  description: A python based microservice to trigger and orchestrate the Html to Json part of anuvaad-extractor. This service will expose REST APIs for Html to Json conversion activity on the other hand will also be plugged into the system as a consumer that picks records posted onto the Kafka Queue in order to perform Html to Json conversion activity.
  contact:
    name: Kumar Deepak
    email: kumar.deepak@tarento.com

schemes:
  - https
basePath: '/anuvaad-etl/anuvaad-extractor/paragraph/HTML2JSON'




paths: 
  /v1/htmltojson/convert:
    post:
      summary: REST API to convert HTML files into JSON of each HTML file.
      description: This API accepts list of directory path of HTML files and convert these Html files into Json data of each Html file. This is an async process.
      parameters:
        - name: request
          in: body
          required: true
          description: Request format accepted by this API.
          schema:
            $ref: '#/definitions/HTML-to-JSONRequest'
            
      tags:
      - HTML-to-JSON

      responses:
        202:
          description: On successful completion of the job.
          schema:
            $ref: '#/definitions/HTML-to-JSONResponse'
        400:
          description: On input errors causing a failure in the job.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: On system level errors causing failure in the job.
          schema:
            $ref: '#/definitions/Error'



definitions:

  File:
    type: object
    properties:
      name:
        type: string
        description: In case of Input Path, This will be obtained in the output of the PDF2HTML API exposed by the anuvaad system. 
                      In case of Output filename, This will be a Json file, which is generated by 13 digit epoch time. 
      type:
        type: string
        description: type of the path.
        enum:
          - FOLDER
      locale:
        type: string
        description: The locale of the file. Meaning, in which language is the uploaded file. For instance, 'en' for English, 'hi' for Hindi etc.
        format: varchar
        
        
  FileInput:
    type: object
    properties:
      source:
        type: object
        description: Details of the source file.
        $ref: '#/definitions/File'        

        
  FileOutput:
    type: object
    properties:
      source:
        type: object
        description: Source Filename.
        $ref: '#/definitions/File/properties/name'        
      target:
        type: object
        description: Target Foldername.
        $ref: '#/definitions/File/properties/name'
        
      
  HTML-to-JSONRequest:
    type: object
    properties:
      input:
        type: object
        description: Details of the source file of which a Json file of json data for each html file has to be generated
        $ref: '#/definitions/FileInput'
      jobID:   
        type: string
        description: A unique job ID generated for complete workflow. i.e.received from previous operation.  
      state:
        type: string
        description: current state of workflow received from previous operation.
        enum:
          - INITIATED
      status:
        type: string
        description: current status of workflow received from previous operation.
        enum:
          - STARTED
      workflowCode:
        type: string
        description: Received from previous operation. Code of the workflow that has to be picked to process this input. These workflows are configured at the application level.
      tool:
        type: string
        description: Current tool name.
        enum:
          - HTML2JSON
      stepOrder:
        type: integer
        description: Current steporder of workflow received from previous operation.

        
  HTML-to-JSONResponse:
    type: object
    properties:        
      jobID:
        type: string
        description: A unique job ID generated for the complete workflow.
      taskID:
        type: string
        description: A unique taskID generated for the current on-going task of the html file to json data file conversion.
      status:
        type: string
        description: Current status of the htmltojson part of workflow.
        enum:
          - SUCCESS
          - FAILED
      state:
        type: string
        description: Current state of the htmltojson part of workflow.
        enum:
          - HTML-TO-JSON-PROCESSED
      output:
        type: object
        description: Final output of this process.
        $ref: '#/definitions/FileOutput'
      workflowCode:
        type: string
        description: Received from previous operation. Code of the workflow that has to be picked to process this input.
                      These workflows are configured at the application level.
      tool:
        type: string
        description: Current tool name.
        enum:
          - HTML2JSON
      stepOrder:
        type: integer
        description: Current steporder of workflow received from previous operation.
      error:
        type: object
        description: Incase the job fails due to an error in of the child tasks, that error will be capture here for the benefit of the user.
        $ref: '#/definitions/Error'
      startTime:
        type: number
        description: 13 digit epoch of the start time.
      endTime:
        type: number
        description: 13 digit epoch of the end time.

        
        
  Error:
    type: object
    properties:
      jobID:
        type: string
        description: ID of the job within which the error occured.
      taskID:
        type: string
        description: ID of the task within which the error occured.
      state:
        type: string
        description: Processing state of the job just before the error.
      workflowCode:
        type: string
        description: Received from previous operation. Code of the workflow that has to be picked to process this input.
                      These workflows are configured at the application level.
      error:
        type: object
        properties:
          code:
            type: string
            description: This is the cause of the error.
          message:
            type: string
            description: User understandable message.
      startTime:
        type: number
        description: 13 digit epoch of the start time.
      endTime:
        type: number
        description: 13 digit epoch of the end time.